/// <reference path="../declarations/index.d.ts" />
import * as React from "react";
declare type RefsData = ReactContextRefs.RefsData;
declare type FCProps = {
    children?: React.ReactNode;
};
export declare const RefProvider: React.FC<FCProps>;
export declare function useRefs(): RefsData[];
export declare function useRefs<T extends ReactContextRefs.RefType>(type: T): Array<ReactContextRefs.RefsValuesMap[T]>;
export declare function useContextRef(meta?: any): (value: any) => void;
export declare function useContextRef<T extends ReactContextRefs.RefType>(type: T, meta: ReactContextRefs.RefsValuesMap[T]["meta"]): (value: ReactContextRefs.RefsValuesMap[T]["current"]) => void;
export declare function ContextRef<T extends ReactContextRefs.RefType = "">(props: {
    children: (ref: (current: ReactContextRefs.RefsValuesMap[T]["current"]) => void) => React.ReactNode;
    type?: T;
    meta?: ReactContextRefs.RefsValuesMap[T]["meta"];
}): React.ReactNode;
export {};
